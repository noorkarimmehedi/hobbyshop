{% doc %}
  @prompt
    build a carousel reels slider for me, everything is good but the indicator isn't sync with swipe perfectly. fix it 
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-reels-carousel-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    overflow: hidden;
    padding: {{ block.settings.section_padding }}px 0;
    background-color: {{ block.settings.background_color }};
  }

  .ai-reels-carousel__header-{{ ai_gen_id }} {
    text-align: center;
    margin-bottom: 40px;
    padding: 0 20px;
  }

  .ai-reels-carousel__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    color: {{ block.settings.text_color }};
    margin: 0 0 12px;
  }

  .ai-reels-carousel__subtitle-{{ ai_gen_id }} {
    font-size: {{ block.settings.subtitle_size }}px;
    color: {{ block.settings.text_color }};
    opacity: 0.8;
  }

  .ai-reels-carousel__container-{{ ai_gen_id }} {
    position: relative;
    max-width: 100%;
    margin: 0 auto;
    padding: 0 60px;
  }

  .ai-reels-carousel__track-{{ ai_gen_id }} {
    display: flex;
    gap: {{ block.settings.gap }}px;
    overflow-x: auto;
    scroll-behavior: smooth;
    scrollbar-width: none;
    -ms-overflow-style: none;
    padding: 10px 0;
    scroll-snap-type: x mandatory;
  }

  .ai-reels-carousel__track-{{ ai_gen_id }}::-webkit-scrollbar {
    display: none;
  }

  .ai-reels-carousel__reel-{{ ai_gen_id }} {
    flex: 0 0 {{ block.settings.reel_width }}px;
    height: {{ block.settings.reel_height }}px;
    position: relative;
    border-radius: {{ block.settings.border_radius }}px;
    overflow: hidden;
    cursor: pointer;
    transition: transform 0.3s ease;
    scroll-snap-align: start;
  }

  .ai-reels-carousel__reel-{{ ai_gen_id }}:hover {
    transform: scale(1.02);
  }

  .ai-reels-carousel__reel-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-reels-carousel__reel-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-reels-carousel__reel-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-reels-carousel__reel-overlay-{{ ai_gen_id }} {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 20px;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0) 100%);
    color: #ffffff;
  }

  .ai-reels-carousel__reel-title-{{ ai_gen_id }} {
    font-size: 16px;
    font-weight: 600;
    margin: 0 0 4px;
  }

  .ai-reels-carousel__reel-description-{{ ai_gen_id }} {
    font-size: 13px;
    opacity: 0.9;
    margin: 0;
  }

  .ai-reels-carousel__play-icon-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 60px;
    height: 60px;
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .ai-reels-carousel__reel-{{ ai_gen_id }}:hover .ai-reels-carousel__play-icon-{{ ai_gen_id }} {
    background-color: rgba(255, 255, 255, 1);
    transform: translate(-50%, -50%) scale(1.1);
  }

  .ai-reels-carousel__play-icon-{{ ai_gen_id }} svg {
    width: 24px;
    height: 24px;
    fill: {{ block.settings.play_icon_color }};
    margin-left: 3px;
  }

  .ai-reels-carousel__nav-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 44px;
    height: 44px;
    background-color: {{ block.settings.nav_button_color }};
    border: none;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    z-index: 2;
  }

  .ai-reels-carousel__nav-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.nav_button_hover_color }};
    transform: translateY(-50%) scale(1.1);
  }

  .ai-reels-carousel__nav-{{ ai_gen_id }}:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .ai-reels-carousel__nav-{{ ai_gen_id }}:disabled:hover {
    transform: translateY(-50%) scale(1);
  }

  .ai-reels-carousel__nav--prev-{{ ai_gen_id }} {
    left: 10px;
  }

  .ai-reels-carousel__nav--next-{{ ai_gen_id }} {
    right: 10px;
  }

  .ai-reels-carousel__nav-{{ ai_gen_id }} svg {
    width: 20px;
    height: 20px;
    stroke: {{ block.settings.nav_icon_color }};
  }

  .ai-reels-carousel__dots-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 30px;
  }

  .ai-reels-carousel__dot-{{ ai_gen_id }} {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: {{ block.settings.dot_color }};
    opacity: 0.3;
    border: none;
    cursor: pointer;
    padding: 0;
    transition: all 0.3s ease;
  }

  .ai-reels-carousel__dot-{{ ai_gen_id }}.active {
    opacity: 1;
    width: 24px;
    border-radius: 4px;
  }

  @media screen and (max-width: 749px) {
    .ai-reels-carousel__container-{{ ai_gen_id }} {
      padding: 0 20px;
    }

    .ai-reels-carousel__nav-{{ ai_gen_id }} {
      display: none;
    }

    .ai-reels-carousel__reel-{{ ai_gen_id }} {
      flex: 0 0 {{ block.settings.reel_width | times: 0.7 }}px;
      height: {{ block.settings.reel_height | times: 0.7 }}px;
    }

    .ai-reels-carousel__title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_size | times: 0.7 }}px;
    }

    .ai-reels-carousel__subtitle-{{ ai_gen_id }} {
      font-size: {{ block.settings.subtitle_size | times: 0.8 }}px;
    }
  }
{% endstyle %}

<reels-carousel-{{ ai_gen_id }} class="ai-reels-carousel-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  {% if block.settings.title != blank or block.settings.subtitle != blank %}
    <div class="ai-reels-carousel__header-{{ ai_gen_id }}">
      {% if block.settings.title != blank %}
        <h2 class="ai-reels-carousel__title-{{ ai_gen_id }}">{{ block.settings.title }}</h2>
      {% endif %}
      {% if block.settings.subtitle != blank %}
        <p class="ai-reels-carousel__subtitle-{{ ai_gen_id }}">{{ block.settings.subtitle }}</p>
      {% endif %}
    </div>
  {% endif %}

  <div class="ai-reels-carousel__container-{{ ai_gen_id }}">
    <button
      class="ai-reels-carousel__nav-{{ ai_gen_id }} ai-reels-carousel__nav--prev-{{ ai_gen_id }}"
      aria-label="Previous"
      data-nav="prev"
    >
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="15 18 9 12 15 6"></polyline>
      </svg>
    </button>

    <div class="ai-reels-carousel__track-{{ ai_gen_id }}" data-track>
      {% for i in (1..10) %}
        {% liquid
          assign reel_enabled_key = 'reel_' | append: i | append: '_enabled'
          assign reel_image_key = 'reel_' | append: i | append: '_image'
          assign reel_title_key = 'reel_' | append: i | append: '_title'
          assign reel_description_key = 'reel_' | append: i | append: '_description'
          assign reel_link_key = 'reel_' | append: i | append: '_link'

          assign reel_enabled = block.settings[reel_enabled_key]
          assign reel_image = block.settings[reel_image_key]
          assign reel_title = block.settings[reel_title_key]
          assign reel_description = block.settings[reel_description_key]
          assign reel_link = block.settings[reel_link_key]
        %}

        {% if reel_enabled %}
          <div class="ai-reels-carousel__reel-{{ ai_gen_id }}" data-reel data-link="{{ reel_link }}">
            {% if reel_image %}
              <img
                src="{{ reel_image | image_url: width: 600 }}"
                alt="{{ reel_image.alt | escape }}"
                class="ai-reels-carousel__reel-image-{{ ai_gen_id }}"
                loading="lazy"
                width="600"
                height="800"
              >
            {% else %}
              <div class="ai-reels-carousel__reel-placeholder-{{ ai_gen_id }}">
                {{ 'image' | placeholder_svg_tag }}
              </div>
            {% endif %}

            {% if block.settings.show_play_icon %}
              <div class="ai-reels-carousel__play-icon-{{ ai_gen_id }}">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                  <polygon points="5 3 19 12 5 21 5 3"></polygon>
                </svg>
              </div>
            {% endif %}

            {% if reel_title != blank or reel_description != blank %}
              <div class="ai-reels-carousel__reel-overlay-{{ ai_gen_id }}">
                {% if reel_title != blank %}
                  <h3 class="ai-reels-carousel__reel-title-{{ ai_gen_id }}">{{ reel_title }}</h3>
                {% endif %}
                {% if reel_description != blank %}
                  <p class="ai-reels-carousel__reel-description-{{ ai_gen_id }}">{{ reel_description }}</p>
                {% endif %}
              </div>
            {% endif %}
          </div>
        {% endif %}
      {% endfor %}
    </div>

    <button
      class="ai-reels-carousel__nav-{{ ai_gen_id }} ai-reels-carousel__nav--next-{{ ai_gen_id }}"
      aria-label="Next"
      data-nav="next"
    >
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="9 18 15 12 9 6"></polyline>
      </svg>
    </button>
  </div>

  {% if block.settings.show_dots %}
    <div class="ai-reels-carousel__dots-{{ ai_gen_id }}" data-dots></div>
  {% endif %}
</reels-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class ReelsCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.track = this.querySelector('[data-track]');
        this.reels = this.querySelectorAll('[data-reel]');
        this.prevButton = this.querySelector('[data-nav="prev"]');
        this.nextButton = this.querySelector('[data-nav="next"]');
        this.dotsContainer = this.querySelector('[data-dots]');
        this.currentIndex = 0;
        this.reelWidth = {{ block.settings.reel_width }};
        this.gap = {{ block.settings.gap }};
        this.scrollTimeout = null;
      }

      connectedCallback() {
        this.setupDots();
        this.setupNavigation();
        this.setupReelClicks();
        this.updateNavButtons();
        this.setupIntersectionObserver();
      }

      setupIntersectionObserver() {
        const options = {
          root: this.track,
          threshold: 0.5,
          rootMargin: '0px'
        };

        this.observer = new IntersectionObserver((entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const index = Array.from(this.reels).indexOf(entry.target);
              if (index !== -1) {
                this.currentIndex = index;
                this.updateDots();
              }
            }
          });
        }, options);

        this.reels.forEach((reel) => {
          this.observer.observe(reel);
        });
      }

      setupDots() {
        if (!this.dotsContainer) return;

        this.reels.forEach((reel, index) => {
          const dot = document.createElement('button');
          dot.className = 'ai-reels-carousel__dot-{{ ai_gen_id }}';
          if (index === 0) dot.classList.add('active');
          dot.setAttribute('aria-label', `Go to reel ${index + 1}`);
          dot.addEventListener('click', () => this.scrollToReel(index));
          this.dotsContainer.appendChild(dot);
        });
      }

      setupNavigation() {
        this.prevButton.addEventListener('click', () => this.navigate('prev'));
        this.nextButton.addEventListener('click', () => this.navigate('next'));

        this.track.addEventListener('scroll', () => {
          clearTimeout(this.scrollTimeout);
          this.scrollTimeout = setTimeout(() => {
            this.updateNavButtons();
          }, 50);
        });
      }

      setupReelClicks() {
        this.reels.forEach((reel) => {
          const link = reel.getAttribute('data-link');
          if (link) {
            reel.addEventListener('click', () => {
              window.location.href = link;
            });
          }
        });
      }

      navigate(direction) {
        if (direction === 'next' && this.currentIndex < this.reels.length - 1) {
          this.scrollToReel(this.currentIndex + 1);
        } else if (direction === 'prev' && this.currentIndex > 0) {
          this.scrollToReel(this.currentIndex - 1);
        }
      }

      scrollToReel(index) {
        if (index < 0 || index >= this.reels.length) return;
        
        const reel = this.reels[index];
        const trackRect = this.track.getBoundingClientRect();
        const reelRect = reel.getBoundingClientRect();
        const scrollLeft = this.track.scrollLeft + (reelRect.left - trackRect.left);
        
        this.track.scrollTo({
          left: scrollLeft,
          behavior: 'smooth'
        });
      }

      updateNavButtons() {
        const maxScroll = this.track.scrollWidth - this.track.clientWidth;
        this.prevButton.disabled = this.track.scrollLeft <= 1;
        this.nextButton.disabled = this.track.scrollLeft >= maxScroll - 1;
      }

      updateDots() {
        if (!this.dotsContainer) return;

        const dots = this.dotsContainer.querySelectorAll('.ai-reels-carousel__dot-{{ ai_gen_id }}');
        dots.forEach((dot, index) => {
          if (index === this.currentIndex) {
            dot.classList.add('active');
          } else {
            dot.classList.remove('active');
          }
        });
      }

      disconnectedCallback() {
        if (this.observer) {
          this.observer.disconnect();
        }
      }
    }

    customElements.define('reels-carousel-{{ ai_gen_id }}', ReelsCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Reels carousel",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Heading"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Watch Our Reels"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Swipe through our latest stories"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 36
    },
    {
      "type": "range",
      "id": "subtitle_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Subtitle size",
      "default": 16
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "reel_width",
      "min": 200,
      "max": 400,
      "step": 10,
      "unit": "px",
      "label": "Reel width",
      "default": 280
    },
    {
      "type": "range",
      "id": "reel_height",
      "min": 300,
      "max": 600,
      "step": 20,
      "unit": "px",
      "label": "Reel height",
      "default": 500
    },
    {
      "type": "range",
      "id": "gap",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Gap between reels",
      "default": 20
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 20,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section padding",
      "default": 60
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 16
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#f0f0f0"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Navigation button",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_button_hover_color",
      "label": "Navigation button hover",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "nav_icon_color",
      "label": "Navigation icon",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "play_icon_color",
      "label": "Play icon",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "dot_color",
      "label": "Dot",
      "default": "#1a1a1a"
    },
    {
      "type": "header",
      "content": "Features"
    },
    {
      "type": "checkbox",
      "id": "show_play_icon",
      "label": "Show play icon",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show dots navigation",
      "default": true
    },
    {
      "type": "header",
      "content": "Reel 1"
    },
    {
      "type": "checkbox",
      "id": "reel_1_enabled",
      "label": "Enable reel 1",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "reel_1_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "reel_1_title",
      "label": "Title",
      "default": "Reel 1"
    },
    {
      "type": "text",
      "id": "reel_1_description",
      "label": "Description",
      "default": "Watch now"
    },
    {
      "type": "url",
      "id": "reel_1_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Reel 2"
    },
    {
      "type": "checkbox",
      "id": "reel_2_enabled",
      "label": "Enable reel 2",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "reel_2_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "reel_2_title",
      "label": "Title",
      "default": "Reel 2"
    },
    {
      "type": "text",
      "id": "reel_2_description",
      "label": "Description",
      "default": "Watch now"
    },
    {
      "type": "url",
      "id": "reel_2_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Reel 3"
    },
    {
      "type": "checkbox",
      "id": "reel_3_enabled",
      "label": "Enable reel 3",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "reel_3_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "reel_3_title",
      "label": "Title",
      "default": "Reel 3"
    },
    {
      "type": "text",
      "id": "reel_3_description",
      "label": "Description",
      "default": "Watch now"
    },
    {
      "type": "url",
      "id": "reel_3_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Reel 4"
    },
    {
      "type": "checkbox",
      "id": "reel_4_enabled",
      "label": "Enable reel 4",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "reel_4_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "reel_4_title",
      "label": "Title",
      "default": "Reel 4"
    },
    {
      "type": "text",
      "id": "reel_4_description",
      "label": "Description",
      "default": "Watch now"
    },
    {
      "type": "url",
      "id": "reel_4_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Reel 5"
    },
    {
      "type": "checkbox",
      "id": "reel_5_enabled",
      "label": "Enable reel 5",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "reel_5_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "reel_5_title",
      "label": "Title",
      "default": "Reel 5"
    },
    {
      "type": "text",
      "id": "reel_5_description",
      "label": "Description",
      "default": "Watch now"
    },
    {
      "type": "url",
      "id": "reel_5_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Reel 6"
    },
    {
      "type": "checkbox",
      "id": "reel_6_enabled",
      "label": "Enable reel 6",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "reel_6_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "reel_6_title",
      "label": "Title",
      "default": "Reel 6"
    },
    {
      "type": "text",
      "id": "reel_6_description",
      "label": "Description",
      "default": "Watch now"
    },
    {
      "type": "url",
      "id": "reel_6_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Reel 7"
    },
    {
      "type": "checkbox",
      "id": "reel_7_enabled",
      "label": "Enable reel 7",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "reel_7_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "reel_7_title",
      "label": "Title",
      "default": "Reel 7"
    },
    {
      "type": "text",
      "id": "reel_7_description",
      "label": "Description",
      "default": "Watch now"
    },
    {
      "type": "url",
      "id": "reel_7_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Reel 8"
    },
    {
      "type": "checkbox",
      "id": "reel_8_enabled",
      "label": "Enable reel 8",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "reel_8_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "reel_8_title",
      "label": "Title",
      "default": "Reel 8"
    },
    {
      "type": "text",
      "id": "reel_8_description",
      "label": "Description",
      "default": "Watch now"
    },
    {
      "type": "url",
      "id": "reel_8_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Reel 9"
    },
    {
      "type": "checkbox",
      "id": "reel_9_enabled",
      "label": "Enable reel 9",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "reel_9_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "reel_9_title",
      "label": "Title",
      "default": "Reel 9"
    },
    {
      "type": "text",
      "id": "reel_9_description",
      "label": "Description",
      "default": "Watch now"
    },
    {
      "type": "url",
      "id": "reel_9_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Reel 10"
    },
    {
      "type": "checkbox",
      "id": "reel_10_enabled",
      "label": "Enable reel 10",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "reel_10_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "reel_10_title",
      "label": "Title",
      "default": "Reel 10"
    },
    {
      "type": "text",
      "id": "reel_10_description",
      "label": "Description",
      "default": "Watch now"
    },
    {
      "type": "url",
      "id": "reel_10_link",
      "label": "Link"
    }
  ],
  "presets": [
    {
      "name": "Reels carousel"
    }
  ]
}
{% endschema %}
