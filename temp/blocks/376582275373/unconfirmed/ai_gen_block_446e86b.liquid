{% doc %}
  @prompt
    build a carousel reels slider for me, everything is good but the indicator isn't sync with swipe perfectly. fix it , add autoplay option too , option to hide the dots and option to enable the arrow
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-carousel-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    overflow: hidden;
    border-radius: {{ block.settings.border_radius }}px;
  }

  .ai-carousel-track-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    touch-action: pan-y;
  }

  .ai-carousel-slide-{{ ai_gen_id }} {
    min-width: 100%;
    flex-shrink: 0;
    position: relative;
  }

  .ai-carousel-slide-{{ ai_gen_id }} img {
    width: 100%;
    height: {{ block.settings.slide_height }}px;
    object-fit: cover;
    display: block;
  }

  .ai-carousel-slide-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.slide_height }}px;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-carousel-slide-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 400px;
    max-height: 400px;
  }

  .ai-carousel-content-{{ ai_gen_id }} {
    position: absolute;
    bottom: 40px;
    left: 50%;
    transform: translateX(-50%);
    text-align: center;
    color: {{ block.settings.text_color }};
    width: 90%;
    max-width: 600px;
  }

  .ai-carousel-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    font-weight: 700;
    margin: 0 0 12px;
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  }

  .ai-carousel-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_size }}px;
    margin: 0 0 20px;
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  }

  .ai-carousel-button-{{ ai_gen_id }} {
    display: inline-block;
    padding: 12px 28px;
    background-color: {{ block.settings.button_bg_color }};
    color: {{ block.settings.button_text_color }};
    text-decoration: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-weight: 600;
    transition: opacity 0.3s ease;
  }

  .ai-carousel-button-{{ ai_gen_id }}:hover {
    opacity: 0.9;
  }

  .ai-carousel-arrow-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: {{ block.settings.arrow_bg_color }};
    color: {{ block.settings.arrow_color }};
    border: none;
    width: {{ block.settings.arrow_size }}px;
    height: {{ block.settings.arrow_size }}px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10;
    transition: opacity 0.3s ease;
    opacity: 0.9;
  }

  .ai-carousel-arrow-{{ ai_gen_id }}:hover {
    opacity: 1;
  }

  .ai-carousel-arrow-{{ ai_gen_id }}--hidden {
    display: none;
  }

  .ai-carousel-arrow-prev-{{ ai_gen_id }} {
    left: 20px;
  }

  .ai-carousel-arrow-next-{{ ai_gen_id }} {
    right: 20px;
  }

  .ai-carousel-arrow-{{ ai_gen_id }} svg {
    width: 24px;
    height: 24px;
  }

  .ai-carousel-dots-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 8px;
    z-index: 10;
  }

  .ai-carousel-dots-{{ ai_gen_id }}--hidden {
    display: none;
  }

  .ai-carousel-dot-{{ ai_gen_id }} {
    width: {{ block.settings.dot_size }}px;
    height: {{ block.settings.dot_size }}px;
    border-radius: 50%;
    background-color: {{ block.settings.dot_inactive_color }};
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.3s ease;
    padding: 0;
  }

  .ai-carousel-dot-{{ ai_gen_id }}--active {
    background-color: {{ block.settings.dot_active_color }};
    transform: scale(1.2);
  }

  @media screen and (max-width: 749px) {
    .ai-carousel-slide-{{ ai_gen_id }} img,
    .ai-carousel-slide-placeholder-{{ ai_gen_id }} {
      height: {{ block.settings.slide_height_mobile }}px;
    }

    .ai-carousel-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_size | times: 0.7 }}px;
    }

    .ai-carousel-description-{{ ai_gen_id }} {
      font-size: {{ block.settings.description_size | times: 0.8 }}px;
    }

    .ai-carousel-content-{{ ai_gen_id }} {
      bottom: 20px;
    }

    .ai-carousel-arrow-{{ ai_gen_id }} {
      width: {{ block.settings.arrow_size | times: 0.8 }}px;
      height: {{ block.settings.arrow_size | times: 0.8 }}px;
    }

    .ai-carousel-arrow-prev-{{ ai_gen_id }} {
      left: 10px;
    }

    .ai-carousel-arrow-next-{{ ai_gen_id }} {
      right: 10px;
    }
  }
{% endstyle %}

<carousel-slider-{{ ai_gen_id }}
  class="ai-carousel-{{ ai_gen_id }}"
  data-autoplay="{{ block.settings.enable_autoplay }}"
  data-autoplay-delay="{{ block.settings.autoplay_delay }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-carousel-track-{{ ai_gen_id }}">
    {% for i in (1..5) %}
      {% liquid
        assign image_key = 'slide_' | append: i | append: '_image'
        assign title_key = 'slide_' | append: i | append: '_title'
        assign description_key = 'slide_' | append: i | append: '_description'
        assign button_text_key = 'slide_' | append: i | append: '_button_text'
        assign button_link_key = 'slide_' | append: i | append: '_button_link'

        assign slide_image = block.settings[image_key]
        assign slide_title = block.settings[title_key]
        assign slide_description = block.settings[description_key]
        assign slide_button_text = block.settings[button_text_key]
        assign slide_button_link = block.settings[button_link_key]
      %}

      <div class="ai-carousel-slide-{{ ai_gen_id }}" data-slide-index="{{ forloop.index0 }}">
        {% if slide_image %}
          <img
            src="{{ slide_image | image_url: width: 2000 }}"
            alt="{{ slide_image.alt | escape }}"
            loading="lazy"
            width="{{ slide_image.width }}"
            height="{{ slide_image.height }}"
          >
        {% else %}
          <div class="ai-carousel-slide-placeholder-{{ ai_gen_id }}">
            {{ 'hero-apparel-1' | placeholder_svg_tag }}
          </div>
        {% endif %}

        {% if slide_title != blank or slide_description != blank or slide_button_text != blank %}
          <div class="ai-carousel-content-{{ ai_gen_id }}">
            {% if slide_title != blank %}
              <h2 class="ai-carousel-title-{{ ai_gen_id }}">{{ slide_title }}</h2>
            {% endif %}
            {% if slide_description != blank %}
              <p class="ai-carousel-description-{{ ai_gen_id }}">{{ slide_description }}</p>
            {% endif %}
            {% if slide_button_text != blank %}
              <a
                href="{{ slide_button_link | default: '#' }}"
                class="ai-carousel-button-{{ ai_gen_id }}"
              >
                {{ slide_button_text }}
              </a>
            {% endif %}
          </div>
        {% endif %}
      </div>
    {% endfor %}
  </div>

  <button
    class="ai-carousel-arrow-{{ ai_gen_id }} ai-carousel-arrow-prev-{{ ai_gen_id }} {% if block.settings.hide_arrows %}ai-carousel-arrow-{{ ai_gen_id }}--hidden{% endif %}"
    aria-label="Previous slide"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <polyline points="15 18 9 12 15 6"></polyline>
    </svg>
  </button>

  <button
    class="ai-carousel-arrow-{{ ai_gen_id }} ai-carousel-arrow-next-{{ ai_gen_id }} {% if block.settings.hide_arrows %}ai-carousel-arrow-{{ ai_gen_id }}--hidden{% endif %}"
    aria-label="Next slide"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <polyline points="9 18 15 12 9 6"></polyline>
    </svg>
  </button>

  <div class="ai-carousel-dots-{{ ai_gen_id }} {% if block.settings.hide_dots %}ai-carousel-dots-{{ ai_gen_id }}--hidden{% endif %}">
    {% for i in (1..5) %}
      <button
        class="ai-carousel-dot-{{ ai_gen_id }} {% if forloop.first %}ai-carousel-dot-{{ ai_gen_id }}--active{% endif %}"
        aria-label="Go to slide {{ forloop.index }}"
        data-dot-index="{{ forloop.index0 }}"
      ></button>
    {% endfor %}
  </div>
</carousel-slider-{{ ai_gen_id }}>

<script>
  (function() {
    class CarouselSlider{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentIndex = 0;
        this.totalSlides = 5;
        this.isDragging = false;
        this.startPos = 0;
        this.currentTranslate = 0;
        this.prevTranslate = 0;
        this.animationID = null;
        this.autoplayInterval = null;
      }

      connectedCallback() {
        this.track = this.querySelector('.ai-carousel-track-{{ ai_gen_id }}');
        this.slides = this.querySelectorAll('.ai-carousel-slide-{{ ai_gen_id }}');
        this.dots = this.querySelectorAll('.ai-carousel-dot-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('.ai-carousel-arrow-prev-{{ ai_gen_id }}');
        this.nextButton = this.querySelector('.ai-carousel-arrow-next-{{ ai_gen_id }}');

        this.enableAutoplay = this.dataset.autoplay === 'true';
        this.autoplayDelay = parseInt(this.dataset.autoplayDelay) * 1000;

        this.setupEventListeners();
        
        if (this.enableAutoplay) {
          this.startAutoplay();
        }
      }

      setupEventListeners() {
        this.prevButton.addEventListener('click', () => this.goToPrevSlide());
        this.nextButton.addEventListener('click', () => this.goToNextSlide());

        this.dots.forEach((dot) => {
          dot.addEventListener('click', (e) => {
            const index = parseInt(e.currentTarget.dataset.dotIndex);
            this.goToSlide(index);
          });
        });

        this.track.addEventListener('touchstart', this.touchStart.bind(this), { passive: true });
        this.track.addEventListener('touchmove', this.touchMove.bind(this), { passive: true });
        this.track.addEventListener('touchend', this.touchEnd.bind(this));

        this.track.addEventListener('mousedown', this.touchStart.bind(this));
        this.track.addEventListener('mousemove', this.touchMove.bind(this));
        this.track.addEventListener('mouseup', this.touchEnd.bind(this));
        this.track.addEventListener('mouseleave', this.touchEnd.bind(this));

        if (this.enableAutoplay) {
          this.addEventListener('mouseenter', () => this.stopAutoplay());
          this.addEventListener('mouseleave', () => this.startAutoplay());
        }
      }

      touchStart(event) {
        this.isDragging = true;
        this.startPos = this.getPositionX(event);
        this.animationID = requestAnimationFrame(this.animation.bind(this));
        this.track.style.cursor = 'grabbing';
        
        if (this.enableAutoplay) {
          this.stopAutoplay();
        }
      }

      touchMove(event) {
        if (this.isDragging) {
          const currentPosition = this.getPositionX(event);
          this.currentTranslate = this.prevTranslate + currentPosition - this.startPos;
        }
      }

      touchEnd() {
        this.isDragging = false;
        cancelAnimationFrame(this.animationID);

        const movedBy = this.currentTranslate - this.prevTranslate;
        const threshold = this.track.offsetWidth * 0.2;

        if (movedBy < -threshold && this.currentIndex < this.totalSlides - 1) {
          this.currentIndex += 1;
        }

        if (movedBy > threshold && this.currentIndex > 0) {
          this.currentIndex -= 1;
        }

        this.setPositionByIndex();
        this.track.style.cursor = 'grab';
        
        if (this.enableAutoplay) {
          this.startAutoplay();
        }
      }

      getPositionX(event) {
        return event.type.includes('mouse') ? event.pageX : event.touches[0].clientX;
      }

      animation() {
        this.setSliderPosition();
        if (this.isDragging) {
          requestAnimationFrame(this.animation.bind(this));
        }
      }

      setSliderPosition() {
        this.track.style.transform = `translateX(${this.currentTranslate}px)`;
      }

      setPositionByIndex() {
        this.currentTranslate = this.currentIndex * -this.track.offsetWidth;
        this.prevTranslate = this.currentTranslate;
        this.track.style.transition = 'transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
        this.setSliderPosition();
        this.updateDots();

        setTimeout(() => {
          this.track.style.transition = '';
        }, 400);
      }

      goToSlide(index) {
        this.currentIndex = index;
        this.setPositionByIndex();
        
        if (this.enableAutoplay) {
          this.stopAutoplay();
          this.startAutoplay();
        }
      }

      goToPrevSlide() {
        if (this.currentIndex > 0) {
          this.currentIndex -= 1;
        } else {
          this.currentIndex = this.totalSlides - 1;
        }
        this.setPositionByIndex();
        
        if (this.enableAutoplay) {
          this.stopAutoplay();
          this.startAutoplay();
        }
      }

      goToNextSlide() {
        if (this.currentIndex < this.totalSlides - 1) {
          this.currentIndex += 1;
        } else {
          this.currentIndex = 0;
        }
        this.setPositionByIndex();
        
        if (this.enableAutoplay) {
          this.stopAutoplay();
          this.startAutoplay();
        }
      }

      updateDots() {
        this.dots.forEach((dot, index) => {
          if (index === this.currentIndex) {
            dot.classList.add('ai-carousel-dot-{{ ai_gen_id }}--active');
          } else {
            dot.classList.remove('ai-carousel-dot-{{ ai_gen_id }}--active');
          }
        });
      }

      startAutoplay() {
        if (!this.enableAutoplay) return;
        
        this.stopAutoplay();
        this.autoplayInterval = setInterval(() => {
          this.goToNextSlide();
        }, this.autoplayDelay);
      }

      stopAutoplay() {
        if (this.autoplayInterval) {
          clearInterval(this.autoplayInterval);
          this.autoplayInterval = null;
        }
      }

      disconnectedCallback() {
        this.stopAutoplay();
      }
    }

    customElements.define('carousel-slider-{{ ai_gen_id }}', CarouselSlider{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Carousel reels slider",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Carousel settings"
    },
    {
      "type": "checkbox",
      "id": "enable_autoplay",
      "label": "Enable autoplay",
      "default": false
    },
    {
      "type": "range",
      "id": "autoplay_delay",
      "min": 2,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "Autoplay delay",
      "default": 5
    },
    {
      "type": "checkbox",
      "id": "hide_dots",
      "label": "Hide dots",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "hide_arrows",
      "label": "Hide arrows",
      "default": false
    },
    {
      "type": "range",
      "id": "slide_height",
      "min": 300,
      "max": 800,
      "step": 50,
      "unit": "px",
      "label": "Slide height (desktop)",
      "default": 600
    },
    {
      "type": "range",
      "id": "slide_height_mobile",
      "min": 200,
      "max": 600,
      "step": 50,
      "unit": "px",
      "label": "Slide height (mobile)",
      "default": 400
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Border radius",
      "default": 24
    },
    {
      "type": "header",
      "content": "Arrows"
    },
    {
      "type": "range",
      "id": "arrow_size",
      "min": 30,
      "max": 60,
      "step": 5,
      "unit": "px",
      "label": "Arrow size",
      "default": 45
    },
    {
      "type": "color",
      "id": "arrow_bg_color",
      "label": "Arrow background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "arrow_color",
      "label": "Arrow color",
      "default": "#1a1a1a"
    },
    {
      "type": "header",
      "content": "Dots"
    },
    {
      "type": "range",
      "id": "dot_size",
      "min": 6,
      "max": 16,
      "step": 2,
      "unit": "px",
      "label": "Dot size",
      "default": 10
    },
    {
      "type": "color",
      "id": "dot_active_color",
      "label": "Active dot",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "dot_inactive_color",
      "label": "Inactive dot",
      "default": "rgba(255, 255, 255, 0.5)"
    },
    {
      "type": "header",
      "content": "Content style"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 42
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 12,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Description size",
      "default": 16
    },
    {
      "type": "color",
      "id": "button_bg_color",
      "label": "Button background",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Slide 1"
    },
    {
      "type": "image_picker",
      "id": "slide_1_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_1_title",
      "label": "Title",
      "default": "Welcome to our store"
    },
    {
      "type": "textarea",
      "id": "slide_1_description",
      "label": "Description",
      "default": "Discover amazing products"
    },
    {
      "type": "text",
      "id": "slide_1_button_text",
      "label": "Button text",
      "default": "Shop now"
    },
    {
      "type": "url",
      "id": "slide_1_button_link",
      "label": "Button link"
    },
    {
      "type": "header",
      "content": "Slide 2"
    },
    {
      "type": "image_picker",
      "id": "slide_2_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_2_title",
      "label": "Title",
      "default": "New arrivals"
    },
    {
      "type": "textarea",
      "id": "slide_2_description",
      "label": "Description",
      "default": "Check out our latest collection"
    },
    {
      "type": "text",
      "id": "slide_2_button_text",
      "label": "Button text",
      "default": "Explore"
    },
    {
      "type": "url",
      "id": "slide_2_button_link",
      "label": "Button link"
    },
    {
      "type": "header",
      "content": "Slide 3"
    },
    {
      "type": "image_picker",
      "id": "slide_3_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_3_title",
      "label": "Title",
      "default": "Special offers"
    },
    {
      "type": "textarea",
      "id": "slide_3_description",
      "label": "Description",
      "default": "Limited time deals"
    },
    {
      "type": "text",
      "id": "slide_3_button_text",
      "label": "Button text",
      "default": "View deals"
    },
    {
      "type": "url",
      "id": "slide_3_button_link",
      "label": "Button link"
    },
    {
      "type": "header",
      "content": "Slide 4"
    },
    {
      "type": "image_picker",
      "id": "slide_4_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_4_title",
      "label": "Title",
      "default": "Best sellers"
    },
    {
      "type": "textarea",
      "id": "slide_4_description",
      "label": "Description",
      "default": "Our most popular items"
    },
    {
      "type": "text",
      "id": "slide_4_button_text",
      "label": "Button text",
      "default": "Shop best sellers"
    },
    {
      "type": "url",
      "id": "slide_4_button_link",
      "label": "Button link"
    },
    {
      "type": "header",
      "content": "Slide 5"
    },
    {
      "type": "image_picker",
      "id": "slide_5_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_5_title",
      "label": "Title",
      "default": "Join our community"
    },
    {
      "type": "textarea",
      "id": "slide_5_description",
      "label": "Description",
      "default": "Follow us for updates"
    },
    {
      "type": "text",
      "id": "slide_5_button_text",
      "label": "Button text",
      "default": "Follow us"
    },
    {
      "type": "url",
      "id": "slide_5_button_link",
      "label": "Button link"
    }
  ],
  "presets": [
    {
      "name": "Carousel reels slider"
    }
  ]
}
{% endschema %}